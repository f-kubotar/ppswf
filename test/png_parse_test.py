import unittest
import os
import struct
from array import array

from bitstring import BitString

import utils
from png import PNG

fixtures_dir = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'fixtures')

class PNGParseColorType3TestCase(unittest.TestCase):
    def setUp(self):
        png_path = os.path.join(fixtures_dir, 'gogopher.png')
        self.png = PNG(open(png_path))

    def testParseIHDR(self):
        assert self.png.width == 100
        assert self.png.height == 100
        assert self.png.depth == 8
        assert self.png.color_type == 3

    def testParsePLTE(self):
        assert utils.rgb(self.png.pallete_bytes) == (
            (  0,  0,  1),
            (  4,  4, 10),
            ( 26, 26, 28),
            ( 32, 31, 37),
            ( 16, 15, 20),
            (  6,  4, 16),
            ( 86, 86, 90),
            (157,157,162),
            (206,206,209),
            (197,197,201),
            (191,192,196),
            (179,179,180),
            (186,186,188),
            (195,195,195),
            ( 91, 91, 92),
            ( 21, 21, 25),
            ( 40, 39, 44),
            ( 56, 55, 62),
            ( 23, 21, 32),
            (  7,  8, 11),
            ( 62, 64, 63),
            (123,123,124),
            (239,240,243),
            (254,254,254),
            (223,224,226),
            (104,103,108),
            ( 80, 79, 84),
            ( 76, 76, 77),
            ( 43, 43, 44),
            ( 63, 63, 65),
            (227,227,229),
            (176,175,181),
            (102,101,105),
            (230,230,234),
            (246,246,249),
            (223,222,226),
            (151,150,155),
            ( 35, 35, 37),
            ( 93, 91,105),
            (248,247,252),
            (117,117,122),
            (216,215,220),
            (249,249,247),
            (246,248,247),
            (211,211,212),
            (131,131,132),
            (108,109,113),
            (166,166,169),
            (107,107,108),
            (236,236,237),
            (125,125,130),
            ( 59, 59, 60),
            (219,219,220),
            ( 45, 45, 49),
            ( 88, 87, 92),
            ( 99, 99,100),
            (204,204,204),
            ( 79, 80, 84),
            (167,168,170),
            (147,147,148),
            ( 10, 10, 13),
            (103,105,104),
            (189,189,194),
            (171,172,172),
            ( 68, 68, 69),
            (140,140,140),
            (163,162,164),
            (115,115,116),
            (155,155,156),
            ( 81, 81, 79),
            (  8,  7, 12),
            (212,212,217),
            (136,136,134),
            (184,184,182),
            ( 72, 72, 70),
            (238,237,242),
            ( 19, 19, 21),
            (166,164,177),
            ( 77, 76, 83),
            ( 69, 69, 73),
            (132,131,136),
            ( 92, 92, 97),
            (182,181,186),
            ( 29, 28, 33),
            (136,135,140),
            (174,174,177),
            (244,244,245),
            ( 50, 50, 51),
            (143,144,146),
            (142,141,147),
            (208,207,212),
            (240,239,244),
            ( 83, 83, 84),
            ( 35, 35, 41),
            (161,159,170),
            (152,151,157),
            ( 13, 11, 25),
            ( 53, 52, 58),
            (199,197,208),
            )

    def testParseIDAT(self):
        counter = {}
        for byte in self.png.idat:
            i = ord(byte) * 3
            rgb = struct.unpack('BBB', self.png.pallete_bytes[i:i+3])
            if not counter.has_key(rgb):
                counter.setdefault(rgb, 0)
            counter[rgb] += 1

        assert counter == {
            (  0,  0,  1): 4796,
            (  4,  4, 10): 486,
            (  6,  4, 16): 21,
            (  7,  8, 11): 26,
            (  8,  7, 12): 20,
            ( 10, 10, 13): 36,
            ( 13, 11, 25): 3,
            ( 16, 15, 20): 32,
            ( 19, 19, 21): 4,
            ( 21, 21, 25): 6,
            ( 23, 21, 32): 3,
            ( 26, 26, 28): 11,
            ( 29, 28, 33): 7,
            ( 32, 31, 37): 7,
            ( 35, 35, 37): 12,
            ( 35, 35, 41): 4,
            ( 40, 39, 44): 3,
            ( 43, 43, 44): 12,
            ( 45, 45, 49): 12,
            ( 50, 50, 51): 8,
            ( 53, 52, 58): 1,
            ( 56, 55, 62): 8,
            ( 59, 59, 60): 10,
            ( 62, 64, 63): 11,
            ( 63, 63, 65): 2,
            ( 68, 68, 69): 10,
            ( 69, 69, 73): 7,
            ( 72, 72, 70): 9,
            ( 76, 76, 77): 11,
            ( 77, 76, 83): 4,
            ( 79, 80, 84): 3,
            ( 80, 79, 84): 19,
            ( 81, 81, 79): 10,
            ( 83, 83, 84): 2,
            ( 86, 86, 90): 10,
            ( 88, 87, 92): 5,
            ( 91, 91, 92): 22,
            ( 92, 92, 97): 5,
            ( 93, 91,105): 4,
            ( 99, 99,100): 29,
            (102,101,105): 7,
            (103,105,104): 1,
            (104,103,108): 4,
            (107,107,108): 15,
            (108,109,113): 6,
            (115,115,116): 16,
            (117,117,122): 4,
            (123,123,124): 16,
            (125,125,130): 8,
            (131,131,132): 22,
            (132,131,136): 5,
            (136,135,140): 2,
            (136,136,134): 11,
            (140,140,140): 15,
            (142,141,147): 6,
            (143,144,146): 6,
            (147,147,148): 17,
            (151,150,155): 3,
            (152,151,157): 2,
            (155,155,156): 13,
            (157,157,162): 8,
            (161,159,170): 2,
            (163,162,164): 7,
            (166,164,177): 7,
            (166,166,169): 11,
            (167,168,170): 8,
            (171,172,172): 16,
            (174,174,177): 8,
            (176,175,181): 11,
            (179,179,180): 13,
            (182,181,186): 3,
            (184,184,182): 8,
            (186,186,188): 13,
            (189,189,194): 12,
            (191,192,196): 9,
            (195,195,195): 11,
            (197,197,201): 8,
            (199,197,208): 1,
            (204,204,204): 5,
            (206,206,209): 22,
            (208,207,212): 1,
            (211,211,212): 20,
            (212,212,217): 8,
            (216,215,220): 4,
            (219,219,220): 14,
            (223,222,226): 6,
            (223,224,226): 11,
            (227,227,229): 17,
            (230,230,234): 9,
            (236,236,237): 27,
            (238,237,242): 6,
            (239,240,243): 13,
            (240,239,244): 3,
            (244,244,245): 1,
            (246,246,249): 35,
            (246,248,247): 73,
            (248,247,252): 50,
            (249,249,247): 154,
            (254,254,254): 3495,
            }
